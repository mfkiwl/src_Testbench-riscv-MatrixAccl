/*
 * Generated by Bluespec Compiler, version 2017.03.beta1 (build 35049, 2017-03-16)
 * 
 * On Thu Nov 29 16:06:08 IST 2018
 * 
 */
#include "bluesim_primitives.h"
#include "mkConv3.h"


/* Constructor */
MOD_mkConv3::MOD_mkConv3(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST__unnamed_(simHdl, "_unnamed_", this, 144u, 2u, 1u, 0u),
    INST__unnamed__1(simHdl, "_unnamed__1", this, 16u, 2u, 1u, 0u),
    INST__unnamed__10(simHdl, "_unnamed__10", this),
    INST__unnamed__11(simHdl, "_unnamed__11", this),
    INST__unnamed__2(simHdl, "_unnamed__2", this, 16u, 8u, 1u, 0u),
    INST__unnamed__3(simHdl, "_unnamed__3", this),
    INST__unnamed__4(simHdl, "_unnamed__4", this),
    INST__unnamed__5(simHdl, "_unnamed__5", this),
    INST__unnamed__6(simHdl, "_unnamed__6", this),
    INST__unnamed__7(simHdl, "_unnamed__7", this),
    INST__unnamed__8(simHdl, "_unnamed__8", this),
    INST__unnamed__9(simHdl, "_unnamed__9", this),
    INST_a0(simHdl, "a0", this),
    INST_a1(simHdl, "a1", this),
    INST_acc4(simHdl, "acc4", this, 16u, 0u, (tUInt8)0u),
    INST_acc5(simHdl, "acc5", this, 16u, 0u, (tUInt8)0u),
    INST_acc6(simHdl, "acc6", this, 16u, 0u, (tUInt8)0u),
    INST_accumulator1_0(simHdl, "accumulator1_0", this, 16u, 2u, 1u, 0u),
    INST_accumulator1_1(simHdl, "accumulator1_1", this, 16u, 2u, 1u, 0u),
    INST_accumulator1_2(simHdl, "accumulator1_2", this, 16u, 2u, 1u, 0u),
    INST_accumulator1_3(simHdl, "accumulator1_3", this, 16u, 2u, 1u, 0u),
    INST_accumulator1_4(simHdl, "accumulator1_4", this, 16u, 2u, 1u, 0u),
    INST_accumulator1_5(simHdl, "accumulator1_5", this, 16u, 2u, 1u, 0u),
    INST_accumulator1_6(simHdl, "accumulator1_6", this, 16u, 2u, 1u, 0u),
    INST_accumulator1_7(simHdl, "accumulator1_7", this, 16u, 2u, 1u, 0u),
    INST_accumulator1_8(simHdl, "accumulator1_8", this, 16u, 2u, 1u, 0u),
    INST_accumulator2_0(simHdl, "accumulator2_0", this, 16u, 2u, 1u, 0u),
    INST_accumulator2_1(simHdl, "accumulator2_1", this, 16u, 2u, 1u, 0u),
    INST_accumulator2_2(simHdl, "accumulator2_2", this, 16u, 2u, 1u, 0u),
    INST_accumulator3(simHdl, "accumulator3", this, 16u, 0u, (tUInt8)0u),
    INST_c0(simHdl, "c0", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_c3(simHdl, "c3", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_cl(simHdl, "cl", this, 1u, (tUInt8)0u),
    INST_clk(simHdl, "clk", this, 32u, 0u, (tUInt8)0u),
    INST_coeffs_0(simHdl, "coeffs_0", this, 16u, 0u, (tUInt8)0u),
    INST_coeffs_1(simHdl, "coeffs_1", this, 16u, 0u, (tUInt8)0u),
    INST_coeffs_2(simHdl, "coeffs_2", this, 16u, 0u, (tUInt8)0u),
    INST_coeffs_3(simHdl, "coeffs_3", this, 16u, 0u, (tUInt8)0u),
    INST_coeffs_4(simHdl, "coeffs_4", this, 16u, 64u, (tUInt8)0u),
    INST_coeffs_5(simHdl, "coeffs_5", this, 16u, 0u, (tUInt8)0u),
    INST_coeffs_6(simHdl, "coeffs_6", this, 16u, 0u, (tUInt8)0u),
    INST_coeffs_7(simHdl, "coeffs_7", this, 16u, 0u, (tUInt8)0u),
    INST_coeffs_8(simHdl, "coeffs_8", this, 16u, 0u, (tUInt8)0u),
    INST_p0(simHdl, "p0", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_p3(simHdl, "p3", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_w(simHdl, "w", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_wc_0(simHdl, "wc_0", this, 1u, (tUInt8)0u),
    INST_wc_1(simHdl, "wc_1", this, 1u, (tUInt8)0u),
    INST_wc_2(simHdl, "wc_2", this, 1u, (tUInt8)0u),
    INST_wc_3(simHdl, "wc_3", this, 1u, (tUInt8)0u),
    INST_wc_4(simHdl, "wc_4", this, 1u, (tUInt8)0u),
    INST_wc_5(simHdl, "wc_5", this, 1u, (tUInt8)0u),
    INST_wc_6(simHdl, "wc_6", this, 1u, (tUInt8)0u),
    INST_wc_7(simHdl, "wc_7", this, 1u, (tUInt8)0u),
    INST_wc_8(simHdl, "wc_8", this, 1u, (tUInt8)0u),
    INST_window_0(simHdl, "window_0", this, 16u, (tUInt8)0u),
    INST_window_1(simHdl, "window_1", this, 16u, (tUInt8)0u),
    INST_window_2(simHdl, "window_2", this, 16u, (tUInt8)0u),
    INST_window_3(simHdl, "window_3", this, 16u, (tUInt8)0u),
    INST_window_4(simHdl, "window_4", this, 16u, (tUInt8)0u),
    INST_window_5(simHdl, "window_5", this, 16u, (tUInt8)0u),
    INST_window_6(simHdl, "window_6", this, 16u, (tUInt8)0u),
    INST_window_7(simHdl, "window_7", this, 16u, (tUInt8)0u),
    INST_window_8(simHdl, "window_8", this, 16u, (tUInt8)0u),
    PORT_RST_N((tUInt8)1u),
    DEF__unnamed__first____d4(144u),
    DEF_x__h11658(144u)
{
  PORT_sendF_filter.setSize(4096u);
  PORT_sendF_filter.clear();
  PORT_sendP_datas.setSize(4096u);
  PORT_sendP_datas.clear();
  symbol_count = 89u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkConv3::init_symbols_0()
{
  init_symbol(&symbols[0u], "_unnamed_", SYM_MODULE, &INST__unnamed_);
  init_symbol(&symbols[1u], "_unnamed__1", SYM_MODULE, &INST__unnamed__1);
  init_symbol(&symbols[2u], "_unnamed__10", SYM_MODULE, &INST__unnamed__10);
  init_symbol(&symbols[3u], "_unnamed__11", SYM_MODULE, &INST__unnamed__11);
  init_symbol(&symbols[4u], "_unnamed__2", SYM_MODULE, &INST__unnamed__2);
  init_symbol(&symbols[5u], "_unnamed__3", SYM_MODULE, &INST__unnamed__3);
  init_symbol(&symbols[6u], "_unnamed__4", SYM_MODULE, &INST__unnamed__4);
  init_symbol(&symbols[7u], "_unnamed__5", SYM_MODULE, &INST__unnamed__5);
  init_symbol(&symbols[8u], "_unnamed__6", SYM_MODULE, &INST__unnamed__6);
  init_symbol(&symbols[9u], "_unnamed__7", SYM_MODULE, &INST__unnamed__7);
  init_symbol(&symbols[10u], "_unnamed__8", SYM_MODULE, &INST__unnamed__8);
  init_symbol(&symbols[11u], "_unnamed__9", SYM_MODULE, &INST__unnamed__9);
  init_symbol(&symbols[12u], "a0", SYM_MODULE, &INST_a0);
  init_symbol(&symbols[13u], "a1", SYM_MODULE, &INST_a1);
  init_symbol(&symbols[14u], "acc4", SYM_MODULE, &INST_acc4);
  init_symbol(&symbols[15u], "acc5", SYM_MODULE, &INST_acc5);
  init_symbol(&symbols[16u], "acc6", SYM_MODULE, &INST_acc6);
  init_symbol(&symbols[17u], "accumulator1_0", SYM_MODULE, &INST_accumulator1_0);
  init_symbol(&symbols[18u], "accumulator1_1", SYM_MODULE, &INST_accumulator1_1);
  init_symbol(&symbols[19u], "accumulator1_2", SYM_MODULE, &INST_accumulator1_2);
  init_symbol(&symbols[20u], "accumulator1_3", SYM_MODULE, &INST_accumulator1_3);
  init_symbol(&symbols[21u], "accumulator1_4", SYM_MODULE, &INST_accumulator1_4);
  init_symbol(&symbols[22u], "accumulator1_5", SYM_MODULE, &INST_accumulator1_5);
  init_symbol(&symbols[23u], "accumulator1_6", SYM_MODULE, &INST_accumulator1_6);
  init_symbol(&symbols[24u], "accumulator1_7", SYM_MODULE, &INST_accumulator1_7);
  init_symbol(&symbols[25u], "accumulator1_8", SYM_MODULE, &INST_accumulator1_8);
  init_symbol(&symbols[26u], "accumulator2_0", SYM_MODULE, &INST_accumulator2_0);
  init_symbol(&symbols[27u], "accumulator2_1", SYM_MODULE, &INST_accumulator2_1);
  init_symbol(&symbols[28u], "accumulator2_2", SYM_MODULE, &INST_accumulator2_2);
  init_symbol(&symbols[29u], "accumulator3", SYM_MODULE, &INST_accumulator3);
  init_symbol(&symbols[30u], "c0", SYM_MODULE, &INST_c0);
  init_symbol(&symbols[31u], "c3", SYM_MODULE, &INST_c3);
  init_symbol(&symbols[32u], "cl", SYM_MODULE, &INST_cl);
  init_symbol(&symbols[33u], "clk", SYM_MODULE, &INST_clk);
  init_symbol(&symbols[34u], "coeffs_0", SYM_MODULE, &INST_coeffs_0);
  init_symbol(&symbols[35u], "coeffs_1", SYM_MODULE, &INST_coeffs_1);
  init_symbol(&symbols[36u], "coeffs_2", SYM_MODULE, &INST_coeffs_2);
  init_symbol(&symbols[37u], "coeffs_3", SYM_MODULE, &INST_coeffs_3);
  init_symbol(&symbols[38u], "coeffs_4", SYM_MODULE, &INST_coeffs_4);
  init_symbol(&symbols[39u], "coeffs_5", SYM_MODULE, &INST_coeffs_5);
  init_symbol(&symbols[40u], "coeffs_6", SYM_MODULE, &INST_coeffs_6);
  init_symbol(&symbols[41u], "coeffs_7", SYM_MODULE, &INST_coeffs_7);
  init_symbol(&symbols[42u], "coeffs_8", SYM_MODULE, &INST_coeffs_8);
  init_symbol(&symbols[43u], "p0", SYM_MODULE, &INST_p0);
  init_symbol(&symbols[44u], "p3", SYM_MODULE, &INST_p3);
  init_symbol(&symbols[45u], "RL__ac1", SYM_RULE);
  init_symbol(&symbols[46u], "RL__ac1_1", SYM_RULE);
  init_symbol(&symbols[47u], "RL__ac1_2", SYM_RULE);
  init_symbol(&symbols[48u], "RL__ac1_3", SYM_RULE);
  init_symbol(&symbols[49u], "RL__ac1_4", SYM_RULE);
  init_symbol(&symbols[50u], "RL__ac1_5", SYM_RULE);
  init_symbol(&symbols[51u], "RL__ac1_6", SYM_RULE);
  init_symbol(&symbols[52u], "RL__ac1_7", SYM_RULE);
  init_symbol(&symbols[53u], "RL__ac1_8", SYM_RULE);
  init_symbol(&symbols[54u], "RL__ac2", SYM_RULE);
  init_symbol(&symbols[55u], "RL__ac3", SYM_RULE);
  init_symbol(&symbols[56u], "RL__clean", SYM_RULE);
  init_symbol(&symbols[57u], "RL__clk", SYM_RULE);
  init_symbol(&symbols[58u], "RL__input_decompose", SYM_RULE);
  init_symbol(&symbols[59u], "RL__pushMAC", SYM_RULE);
  init_symbol(&symbols[60u], "RL__pushMAC_1", SYM_RULE);
  init_symbol(&symbols[61u], "RL__pushMAC_2", SYM_RULE);
  init_symbol(&symbols[62u], "RL__pushMAC_3", SYM_RULE);
  init_symbol(&symbols[63u], "RL__pushMAC_4", SYM_RULE);
  init_symbol(&symbols[64u], "RL__pushMAC_5", SYM_RULE);
  init_symbol(&symbols[65u], "RL__pushMAC_6", SYM_RULE);
  init_symbol(&symbols[66u], "RL__pushMAC_7", SYM_RULE);
  init_symbol(&symbols[67u], "RL__pushMAC_8", SYM_RULE);
  init_symbol(&symbols[68u], "sendF_filter", SYM_PORT, &PORT_sendF_filter, 4096u);
  init_symbol(&symbols[69u], "sendP_datas", SYM_PORT, &PORT_sendP_datas, 4096u);
  init_symbol(&symbols[70u], "w", SYM_MODULE, &INST_w);
  init_symbol(&symbols[71u], "wc_0", SYM_MODULE, &INST_wc_0);
  init_symbol(&symbols[72u], "wc_1", SYM_MODULE, &INST_wc_1);
  init_symbol(&symbols[73u], "wc_2", SYM_MODULE, &INST_wc_2);
  init_symbol(&symbols[74u], "wc_3", SYM_MODULE, &INST_wc_3);
  init_symbol(&symbols[75u], "wc_4", SYM_MODULE, &INST_wc_4);
  init_symbol(&symbols[76u], "wc_5", SYM_MODULE, &INST_wc_5);
  init_symbol(&symbols[77u], "wc_6", SYM_MODULE, &INST_wc_6);
  init_symbol(&symbols[78u], "wc_7", SYM_MODULE, &INST_wc_7);
  init_symbol(&symbols[79u], "wc_8", SYM_MODULE, &INST_wc_8);
  init_symbol(&symbols[80u], "window_0", SYM_MODULE, &INST_window_0);
  init_symbol(&symbols[81u], "window_1", SYM_MODULE, &INST_window_1);
  init_symbol(&symbols[82u], "window_2", SYM_MODULE, &INST_window_2);
  init_symbol(&symbols[83u], "window_3", SYM_MODULE, &INST_window_3);
  init_symbol(&symbols[84u], "window_4", SYM_MODULE, &INST_window_4);
  init_symbol(&symbols[85u], "window_5", SYM_MODULE, &INST_window_5);
  init_symbol(&symbols[86u], "window_6", SYM_MODULE, &INST_window_6);
  init_symbol(&symbols[87u], "window_7", SYM_MODULE, &INST_window_7);
  init_symbol(&symbols[88u], "window_8", SYM_MODULE, &INST_window_8);
}


/* Rule actions */

void MOD_mkConv3::RL__clk()
{
  tUInt32 DEF_clk_PLUS_1___d2;
  tUInt32 DEF_b__h5103;
  DEF_b__h5103 = INST_clk.METH_read();
  DEF_clk_PLUS_1___d2 = DEF_b__h5103 + 1u;
  INST_clk.METH_write(DEF_clk_PLUS_1___d2);
}

void MOD_mkConv3::RL__input_decompose()
{
  tUInt32 DEF_unnamed__first_BITS_15_TO_0___d5;
  tUInt32 DEF_unnamed__first_BITS_31_TO_16___d6;
  tUInt32 DEF_unnamed__first_BITS_47_TO_32___d7;
  tUInt32 DEF_unnamed__first_BITS_63_TO_48___d8;
  tUInt32 DEF_unnamed__first_BITS_79_TO_64___d9;
  tUInt32 DEF_unnamed__first_BITS_95_TO_80___d10;
  tUInt32 DEF_unnamed__first_BITS_111_TO_96___d11;
  tUInt32 DEF_unnamed__first_BITS_127_TO_112___d12;
  tUInt32 DEF_unnamed__first_BITS_143_TO_128___d13;
  DEF__unnamed__first____d4 = INST__unnamed_.METH_first();
  DEF_unnamed__first_BITS_143_TO_128___d13 = DEF__unnamed__first____d4.get_bits_in_word32(4u,
											  0u,
											  16u);
  DEF_unnamed__first_BITS_127_TO_112___d12 = DEF__unnamed__first____d4.get_bits_in_word32(3u,
											  16u,
											  16u);
  DEF_unnamed__first_BITS_111_TO_96___d11 = DEF__unnamed__first____d4.get_bits_in_word32(3u, 0u, 16u);
  DEF_unnamed__first_BITS_95_TO_80___d10 = DEF__unnamed__first____d4.get_bits_in_word32(2u, 16u, 16u);
  DEF_unnamed__first_BITS_79_TO_64___d9 = DEF__unnamed__first____d4.get_bits_in_word32(2u, 0u, 16u);
  DEF_unnamed__first_BITS_63_TO_48___d8 = DEF__unnamed__first____d4.get_bits_in_word32(1u, 16u, 16u);
  DEF_unnamed__first_BITS_47_TO_32___d7 = DEF__unnamed__first____d4.get_bits_in_word32(1u, 0u, 16u);
  DEF_unnamed__first_BITS_31_TO_16___d6 = DEF__unnamed__first____d4.get_bits_in_word32(0u, 16u, 16u);
  DEF_unnamed__first_BITS_15_TO_0___d5 = DEF__unnamed__first____d4.get_bits_in_word32(0u, 0u, 16u);
  INST__unnamed_.METH_deq();
  INST_window_0.METH_wset(DEF_unnamed__first_BITS_15_TO_0___d5);
  INST_wc_0.METH_wset((tUInt8)1u);
  INST_wc_1.METH_wset((tUInt8)1u);
  INST_window_1.METH_wset(DEF_unnamed__first_BITS_31_TO_16___d6);
  INST_window_2.METH_wset(DEF_unnamed__first_BITS_47_TO_32___d7);
  INST_wc_2.METH_wset((tUInt8)1u);
  INST_window_3.METH_wset(DEF_unnamed__first_BITS_63_TO_48___d8);
  INST_wc_3.METH_wset((tUInt8)1u);
  INST_window_4.METH_wset(DEF_unnamed__first_BITS_79_TO_64___d9);
  INST_window_5.METH_wset(DEF_unnamed__first_BITS_95_TO_80___d10);
  INST_wc_4.METH_wset((tUInt8)1u);
  INST_wc_5.METH_wset((tUInt8)1u);
  INST_window_6.METH_wset(DEF_unnamed__first_BITS_111_TO_96___d11);
  INST_wc_6.METH_wset((tUInt8)1u);
  INST_window_7.METH_wset(DEF_unnamed__first_BITS_127_TO_112___d12);
  INST_wc_7.METH_wset((tUInt8)1u);
  INST_wc_8.METH_wset((tUInt8)1u);
  INST_window_8.METH_wset(DEF_unnamed__first_BITS_143_TO_128___d13);
}

void MOD_mkConv3::RL__pushMAC()
{
  tUInt32 DEF_window_0_wget____d23;
  tUInt32 DEF_x__h7642;
  DEF_x__h7642 = INST_coeffs_0.METH_read();
  DEF_window_0_wget____d23 = INST_window_0.METH_wget();
  INST__unnamed__3.METH_a(DEF_window_0_wget____d23);
  INST__unnamed__3.METH_b(DEF_x__h7642);
}

void MOD_mkConv3::RL__ac1()
{
  tUInt32 DEF__unnamed__3_out___d28;
  tUInt32 DEF_AVMeth__unnamed__3_out;
  DEF_AVMeth__unnamed__3_out = INST__unnamed__3.METH_out();
  DEF__unnamed__3_out___d28 = DEF_AVMeth__unnamed__3_out;
  INST_accumulator1_0.METH_enq(DEF__unnamed__3_out___d28);
}

void MOD_mkConv3::RL__pushMAC_1()
{
  tUInt32 DEF_window_1_wget____d38;
  tUInt32 DEF_x__h8110;
  DEF_x__h8110 = INST_coeffs_1.METH_read();
  DEF_window_1_wget____d38 = INST_window_1.METH_wget();
  INST__unnamed__4.METH_a(DEF_window_1_wget____d38);
  INST__unnamed__4.METH_b(DEF_x__h8110);
}

void MOD_mkConv3::RL__ac1_1()
{
  tUInt32 DEF__unnamed__4_out___d43;
  tUInt32 DEF_AVMeth__unnamed__4_out;
  DEF_AVMeth__unnamed__4_out = INST__unnamed__4.METH_out();
  DEF__unnamed__4_out___d43 = DEF_AVMeth__unnamed__4_out;
  INST_accumulator1_1.METH_enq(DEF__unnamed__4_out___d43);
}

void MOD_mkConv3::RL__pushMAC_2()
{
  tUInt32 DEF_window_2_wget____d53;
  tUInt32 DEF_x__h8360;
  DEF_x__h8360 = INST_coeffs_2.METH_read();
  DEF_window_2_wget____d53 = INST_window_2.METH_wget();
  INST__unnamed__5.METH_a(DEF_window_2_wget____d53);
  INST__unnamed__5.METH_b(DEF_x__h8360);
}

void MOD_mkConv3::RL__ac1_2()
{
  tUInt32 DEF__unnamed__5_out___d58;
  tUInt32 DEF_AVMeth__unnamed__5_out;
  DEF_AVMeth__unnamed__5_out = INST__unnamed__5.METH_out();
  DEF__unnamed__5_out___d58 = DEF_AVMeth__unnamed__5_out;
  INST_accumulator1_2.METH_enq(DEF__unnamed__5_out___d58);
}

void MOD_mkConv3::RL__pushMAC_3()
{
  tUInt32 DEF_window_3_wget____d68;
  tUInt32 DEF_x__h8610;
  DEF_x__h8610 = INST_coeffs_3.METH_read();
  DEF_window_3_wget____d68 = INST_window_3.METH_wget();
  INST__unnamed__6.METH_a(DEF_window_3_wget____d68);
  INST__unnamed__6.METH_b(DEF_x__h8610);
}

void MOD_mkConv3::RL__ac1_3()
{
  tUInt32 DEF__unnamed__6_out___d73;
  tUInt32 DEF_AVMeth__unnamed__6_out;
  DEF_AVMeth__unnamed__6_out = INST__unnamed__6.METH_out();
  DEF__unnamed__6_out___d73 = DEF_AVMeth__unnamed__6_out;
  INST_accumulator1_3.METH_enq(DEF__unnamed__6_out___d73);
}

void MOD_mkConv3::RL__pushMAC_4()
{
  tUInt32 DEF_window_4_wget____d83;
  tUInt32 DEF_x__h8860;
  DEF_x__h8860 = INST_coeffs_4.METH_read();
  DEF_window_4_wget____d83 = INST_window_4.METH_wget();
  INST__unnamed__7.METH_a(DEF_window_4_wget____d83);
  INST__unnamed__7.METH_b(DEF_x__h8860);
}

void MOD_mkConv3::RL__ac1_4()
{
  tUInt32 DEF__unnamed__7_out___d88;
  tUInt32 DEF_AVMeth__unnamed__7_out;
  DEF_AVMeth__unnamed__7_out = INST__unnamed__7.METH_out();
  DEF__unnamed__7_out___d88 = DEF_AVMeth__unnamed__7_out;
  INST_accumulator1_4.METH_enq(DEF__unnamed__7_out___d88);
}

void MOD_mkConv3::RL__pushMAC_5()
{
  tUInt32 DEF_window_5_wget____d98;
  tUInt32 DEF_x__h9110;
  DEF_x__h9110 = INST_coeffs_5.METH_read();
  DEF_window_5_wget____d98 = INST_window_5.METH_wget();
  INST__unnamed__8.METH_a(DEF_window_5_wget____d98);
  INST__unnamed__8.METH_b(DEF_x__h9110);
}

void MOD_mkConv3::RL__ac1_5()
{
  tUInt32 DEF__unnamed__8_out___d103;
  tUInt32 DEF_AVMeth__unnamed__8_out;
  DEF_AVMeth__unnamed__8_out = INST__unnamed__8.METH_out();
  DEF__unnamed__8_out___d103 = DEF_AVMeth__unnamed__8_out;
  INST_accumulator1_5.METH_enq(DEF__unnamed__8_out___d103);
}

void MOD_mkConv3::RL__pushMAC_6()
{
  tUInt32 DEF_window_6_wget____d113;
  tUInt32 DEF_x__h9360;
  DEF_x__h9360 = INST_coeffs_6.METH_read();
  DEF_window_6_wget____d113 = INST_window_6.METH_wget();
  INST__unnamed__9.METH_a(DEF_window_6_wget____d113);
  INST__unnamed__9.METH_b(DEF_x__h9360);
}

void MOD_mkConv3::RL__ac1_6()
{
  tUInt32 DEF__unnamed__9_out___d118;
  tUInt32 DEF_AVMeth__unnamed__9_out;
  DEF_AVMeth__unnamed__9_out = INST__unnamed__9.METH_out();
  DEF__unnamed__9_out___d118 = DEF_AVMeth__unnamed__9_out;
  INST_accumulator1_6.METH_enq(DEF__unnamed__9_out___d118);
}

void MOD_mkConv3::RL__pushMAC_7()
{
  tUInt32 DEF_window_7_wget____d128;
  tUInt32 DEF_x__h9610;
  DEF_x__h9610 = INST_coeffs_7.METH_read();
  DEF_window_7_wget____d128 = INST_window_7.METH_wget();
  INST__unnamed__10.METH_a(DEF_window_7_wget____d128);
  INST__unnamed__10.METH_b(DEF_x__h9610);
}

void MOD_mkConv3::RL__ac1_7()
{
  tUInt32 DEF__unnamed__10_out___d133;
  tUInt32 DEF_AVMeth__unnamed__10_out;
  DEF_AVMeth__unnamed__10_out = INST__unnamed__10.METH_out();
  DEF__unnamed__10_out___d133 = DEF_AVMeth__unnamed__10_out;
  INST_accumulator1_7.METH_enq(DEF__unnamed__10_out___d133);
}

void MOD_mkConv3::RL__pushMAC_8()
{
  tUInt32 DEF_window_8_wget____d143;
  tUInt32 DEF_x__h9860;
  DEF_x__h9860 = INST_coeffs_8.METH_read();
  DEF_window_8_wget____d143 = INST_window_8.METH_wget();
  INST__unnamed__11.METH_a(DEF_window_8_wget____d143);
  INST__unnamed__11.METH_b(DEF_x__h9860);
}

void MOD_mkConv3::RL__ac1_8()
{
  tUInt32 DEF__unnamed__11_out___d148;
  tUInt32 DEF_AVMeth__unnamed__11_out;
  DEF_AVMeth__unnamed__11_out = INST__unnamed__11.METH_out();
  DEF__unnamed__11_out___d148 = DEF_AVMeth__unnamed__11_out;
  INST_accumulator1_8.METH_enq(DEF__unnamed__11_out___d148);
}

void MOD_mkConv3::RL__ac2()
{
  tUInt32 DEF_in2_i__h10422;
  tUInt32 DEF_in1_i__h10401;
  tUInt32 DEF_in1_i__h10560;
  tUInt32 DEF_in2_i__h10581;
  tUInt32 DEF_in1_i__h10703;
  tUInt32 DEF_in2_i__h10724;
  tUInt32 DEF_in2_i__h10378;
  tUInt32 DEF_in1_i__h10356;
  tUInt32 DEF_in1_i__h10515;
  tUInt32 DEF_in2_i__h10537;
  tUInt32 DEF_in1_i__h10658;
  tUInt32 DEF_in2_i__h10680;
  tUInt8 DEF_in1_f__h10402;
  tUInt8 DEF_in1_f__h10357;
  tUInt8 DEF_in2_f__h10423;
  tUInt8 DEF_in1_f__h10516;
  tUInt8 DEF_in1_f__h10561;
  tUInt8 DEF_in2_f__h10582;
  tUInt8 DEF_in1_f__h10659;
  tUInt8 DEF_in1_f__h10704;
  tUInt8 DEF_in2_f__h10725;
  tUInt8 DEF_in2_f__h10379;
  tUInt8 DEF_in2_f__h10538;
  tUInt8 DEF_in2_f__h10681;
  tUInt32 DEF_x__h10404;
  tUInt32 DEF_x__h10359;
  tUInt32 DEF_x__h10425;
  tUInt32 DEF_x__h10518;
  tUInt32 DEF_x__h10563;
  tUInt32 DEF_x__h10584;
  tUInt32 DEF_x__h10661;
  tUInt32 DEF_x__h10706;
  tUInt32 DEF_x__h10727;
  tUInt32 DEF_x__h10393;
  tUInt32 DEF_x__h10381;
  tUInt32 DEF_x__h10552;
  tUInt32 DEF_x__h10540;
  tUInt32 DEF_x__h10695;
  tUInt32 DEF_x__h10683;
  tUInt32 DEF_x__h10507;
  tUInt32 DEF_x_BITS_15_TO_0___h10605;
  tUInt32 DEF_x__h10348;
  tUInt32 DEF_x_BITS_15_TO_0___h10446;
  tUInt32 DEF_x__h10650;
  tUInt32 DEF_x_BITS_15_TO_0___h10748;
  tUInt32 DEF_x__h10368;
  tUInt32 DEF_x__h10527;
  tUInt32 DEF_x__h10670;
  tUInt32 DEF_x__h10412;
  tUInt32 DEF_x__h10433;
  tUInt32 DEF_x__h10571;
  tUInt32 DEF_x__h10592;
  tUInt32 DEF_x__h10714;
  tUInt32 DEF_x__h10735;
  DEF_x__h10735 = INST_accumulator1_8.METH_first();
  DEF_x__h10714 = INST_accumulator1_7.METH_first();
  DEF_x__h10592 = INST_accumulator1_6.METH_first();
  DEF_x__h10571 = INST_accumulator1_5.METH_first();
  DEF_x__h10433 = INST_accumulator1_4.METH_first();
  DEF_x__h10412 = INST_accumulator1_3.METH_first();
  DEF_x__h10670 = INST_accumulator1_2.METH_first();
  DEF_x__h10527 = INST_accumulator1_1.METH_first();
  DEF_x__h10368 = INST_accumulator1_0.METH_first();
  DEF_x__h10727 = (tUInt32)(DEF_x__h10735 >> 6u);
  DEF_x__h10706 = (tUInt32)(DEF_x__h10714 >> 6u);
  DEF_x__h10661 = (tUInt32)(DEF_x__h10670 >> 6u);
  DEF_x__h10584 = (tUInt32)(DEF_x__h10592 >> 6u);
  DEF_x__h10563 = (tUInt32)(DEF_x__h10571 >> 6u);
  DEF_x__h10518 = (tUInt32)(DEF_x__h10527 >> 6u);
  DEF_x__h10425 = (tUInt32)(DEF_x__h10433 >> 6u);
  DEF_x__h10359 = (tUInt32)(DEF_x__h10368 >> 6u);
  DEF_x__h10404 = (tUInt32)(DEF_x__h10412 >> 6u);
  DEF_in2_f__h10725 = (tUInt8)((tUInt8)63u & DEF_x__h10735);
  DEF_in1_f__h10704 = (tUInt8)((tUInt8)63u & DEF_x__h10714);
  DEF_in1_f__h10659 = (tUInt8)((tUInt8)63u & DEF_x__h10670);
  DEF_in2_f__h10582 = (tUInt8)((tUInt8)63u & DEF_x__h10592);
  DEF_in1_f__h10561 = (tUInt8)((tUInt8)63u & DEF_x__h10571);
  DEF_in1_f__h10516 = (tUInt8)((tUInt8)63u & DEF_x__h10527);
  DEF_in2_f__h10423 = (tUInt8)((tUInt8)63u & DEF_x__h10433);
  DEF_in1_f__h10357 = (tUInt8)((tUInt8)63u & DEF_x__h10368);
  DEF_in1_f__h10402 = (tUInt8)((tUInt8)63u & DEF_x__h10412);
  DEF_in1_i__h10658 = primSignExt32(12u, 10u, (tUInt32)(DEF_x__h10661));
  DEF_in1_i__h10515 = primSignExt32(12u, 10u, (tUInt32)(DEF_x__h10518));
  DEF_in1_i__h10356 = primSignExt32(12u, 10u, (tUInt32)(DEF_x__h10359));
  DEF_in2_i__h10581 = primSignExt32(11u, 10u, (tUInt32)(DEF_x__h10584));
  DEF_in2_i__h10724 = primSignExt32(11u, 10u, (tUInt32)(DEF_x__h10727));
  DEF_in1_i__h10703 = primSignExt32(11u, 10u, (tUInt32)(DEF_x__h10706));
  DEF_x__h10695 = 131071u & ((131071u & ((DEF_in1_i__h10703 << 6u) | (tUInt32)(DEF_in1_f__h10704))) + (131071u & ((DEF_in2_i__h10724 << 6u) | (tUInt32)(DEF_in2_f__h10725))));
  DEF_x__h10683 = (tUInt32)(DEF_x__h10695 >> 6u);
  DEF_in2_f__h10681 = (tUInt8)((tUInt8)63u & DEF_x__h10695);
  DEF_in2_i__h10680 = primSignExt32(12u, 11u, (tUInt32)(DEF_x__h10683));
  DEF_x__h10650 = 262143u & ((262143u & ((DEF_in1_i__h10658 << 6u) | (tUInt32)(DEF_in1_f__h10659))) + (262143u & ((DEF_in2_i__h10680 << 6u) | (tUInt32)(DEF_in2_f__h10681))));
  DEF_x_BITS_15_TO_0___h10748 = (tUInt32)(65535u & DEF_x__h10650);
  DEF_in1_i__h10560 = primSignExt32(11u, 10u, (tUInt32)(DEF_x__h10563));
  DEF_x__h10552 = 131071u & ((131071u & ((DEF_in1_i__h10560 << 6u) | (tUInt32)(DEF_in1_f__h10561))) + (131071u & ((DEF_in2_i__h10581 << 6u) | (tUInt32)(DEF_in2_f__h10582))));
  DEF_x__h10540 = (tUInt32)(DEF_x__h10552 >> 6u);
  DEF_in2_f__h10538 = (tUInt8)((tUInt8)63u & DEF_x__h10552);
  DEF_in2_i__h10537 = primSignExt32(12u, 11u, (tUInt32)(DEF_x__h10540));
  DEF_x__h10507 = 262143u & ((262143u & ((DEF_in1_i__h10515 << 6u) | (tUInt32)(DEF_in1_f__h10516))) + (262143u & ((DEF_in2_i__h10537 << 6u) | (tUInt32)(DEF_in2_f__h10538))));
  DEF_x_BITS_15_TO_0___h10605 = (tUInt32)(65535u & DEF_x__h10507);
  DEF_in1_i__h10401 = primSignExt32(11u, 10u, (tUInt32)(DEF_x__h10404));
  DEF_in2_i__h10422 = primSignExt32(11u, 10u, (tUInt32)(DEF_x__h10425));
  DEF_x__h10393 = 131071u & ((131071u & ((DEF_in1_i__h10401 << 6u) | (tUInt32)(DEF_in1_f__h10402))) + (131071u & ((DEF_in2_i__h10422 << 6u) | (tUInt32)(DEF_in2_f__h10423))));
  DEF_x__h10381 = (tUInt32)(DEF_x__h10393 >> 6u);
  DEF_in2_f__h10379 = (tUInt8)((tUInt8)63u & DEF_x__h10393);
  DEF_in2_i__h10378 = primSignExt32(12u, 11u, (tUInt32)(DEF_x__h10381));
  DEF_x__h10348 = 262143u & ((262143u & ((DEF_in1_i__h10356 << 6u) | (tUInt32)(DEF_in1_f__h10357))) + (262143u & ((DEF_in2_i__h10378 << 6u) | (tUInt32)(DEF_in2_f__h10379))));
  DEF_x_BITS_15_TO_0___h10446 = (tUInt32)(65535u & DEF_x__h10348);
  INST_accumulator1_0.METH_deq();
  INST_accumulator1_1.METH_deq();
  INST_accumulator1_2.METH_deq();
  INST_accumulator1_3.METH_deq();
  INST_accumulator1_4.METH_deq();
  INST_accumulator1_5.METH_deq();
  INST_accumulator1_6.METH_deq();
  INST_accumulator1_7.METH_deq();
  INST_accumulator1_8.METH_deq();
  INST_accumulator2_0.METH_enq(DEF_x_BITS_15_TO_0___h10446);
  INST_accumulator2_1.METH_enq(DEF_x_BITS_15_TO_0___h10605);
  INST_accumulator2_2.METH_enq(DEF_x_BITS_15_TO_0___h10748);
}

void MOD_mkConv3::RL__ac3()
{
  tUInt32 DEF_in1_i__h10940;
  tUInt32 DEF_in2_i__h10961;
  tUInt32 DEF_in1_i__h10895;
  tUInt32 DEF_in2_i__h10917;
  tUInt8 DEF_in1_f__h10896;
  tUInt8 DEF_in1_f__h10941;
  tUInt8 DEF_in2_f__h10962;
  tUInt8 DEF_in2_f__h10918;
  tUInt32 DEF_x__h10898;
  tUInt32 DEF_x__h10943;
  tUInt32 DEF_x__h10964;
  tUInt32 DEF_x__h10932;
  tUInt32 DEF_x__h10920;
  tUInt32 DEF_x__h10887;
  tUInt32 DEF_x_BITS_15_TO_0___h10985;
  tUInt32 DEF_x__h10907;
  tUInt32 DEF_x__h10951;
  tUInt32 DEF_x__h10972;
  DEF_x__h10972 = INST_accumulator2_2.METH_first();
  DEF_x__h10951 = INST_accumulator2_1.METH_first();
  DEF_x__h10907 = INST_accumulator2_0.METH_first();
  DEF_x__h10964 = (tUInt32)(DEF_x__h10972 >> 6u);
  DEF_x__h10943 = (tUInt32)(DEF_x__h10951 >> 6u);
  DEF_x__h10898 = (tUInt32)(DEF_x__h10907 >> 6u);
  DEF_in2_f__h10962 = (tUInt8)((tUInt8)63u & DEF_x__h10972);
  DEF_in1_f__h10941 = (tUInt8)((tUInt8)63u & DEF_x__h10951);
  DEF_in1_f__h10896 = (tUInt8)((tUInt8)63u & DEF_x__h10907);
  DEF_in1_i__h10895 = primSignExt32(12u, 10u, (tUInt32)(DEF_x__h10898));
  DEF_in2_i__h10961 = primSignExt32(11u, 10u, (tUInt32)(DEF_x__h10964));
  DEF_in1_i__h10940 = primSignExt32(11u, 10u, (tUInt32)(DEF_x__h10943));
  DEF_x__h10932 = 131071u & ((131071u & ((DEF_in1_i__h10940 << 6u) | (tUInt32)(DEF_in1_f__h10941))) + (131071u & ((DEF_in2_i__h10961 << 6u) | (tUInt32)(DEF_in2_f__h10962))));
  DEF_x__h10920 = (tUInt32)(DEF_x__h10932 >> 6u);
  DEF_in2_f__h10918 = (tUInt8)((tUInt8)63u & DEF_x__h10932);
  DEF_in2_i__h10917 = primSignExt32(12u, 11u, (tUInt32)(DEF_x__h10920));
  DEF_x__h10887 = 262143u & ((262143u & ((DEF_in1_i__h10895 << 6u) | (tUInt32)(DEF_in1_f__h10896))) + (262143u & ((DEF_in2_i__h10917 << 6u) | (tUInt32)(DEF_in2_f__h10918))));
  DEF_x_BITS_15_TO_0___h10985 = (tUInt32)(65535u & DEF_x__h10887);
  INST_accumulator2_0.METH_deq();
  INST_accumulator2_1.METH_deq();
  INST_accumulator2_2.METH_deq();
  INST__unnamed__1.METH_enq(DEF_x_BITS_15_TO_0___h10985);
}

void MOD_mkConv3::RL__clean()
{
  INST_a0.METH_clean();
  INST_a1.METH_clean();
  INST__unnamed__3.METH_clean();
  INST__unnamed__4.METH_clean();
  INST__unnamed__5.METH_clean();
  INST__unnamed__6.METH_clean();
  INST__unnamed__7.METH_clean();
  INST__unnamed__8.METH_clean();
  INST__unnamed__9.METH_clean();
  INST__unnamed__10.METH_clean();
  INST__unnamed__11.METH_clean();
  INST__unnamed__2.METH_clear();
  INST__unnamed__1.METH_clear();
  INST__unnamed_.METH_clear();
  INST_p0.METH_write((tUInt8)0u);
  INST_c0.METH_write((tUInt8)0u);
}


/* Methods */

void MOD_mkConv3::METH_sendP(tUWide ARG_sendP_datas)
{
  PORT_sendP_datas = ARG_sendP_datas;
  wop_primExtractWide(144u, 4096u, ARG_sendP_datas, 32u, 143u, 32u, 0u, DEF_x__h11658);
  INST__unnamed_.METH_enq(DEF_x__h11658);
}

tUInt8 MOD_mkConv3::METH_RDY_sendP()
{
  tUInt8 PORT_RDY_sendP;
  tUInt8 DEF_CAN_FIRE_sendP;
  DEF_CAN_FIRE_sendP = INST__unnamed__1.METH_notFull() && INST__unnamed_.METH_i_notFull();
  PORT_RDY_sendP = DEF_CAN_FIRE_sendP;
  return PORT_RDY_sendP;
}

void MOD_mkConv3::METH_sendF(tUWide ARG_sendF_filter)
{
  tUInt32 DEF_sendF_filter_BITS_15_TO_0___d273;
  tUInt32 DEF_sendF_filter_BITS_31_TO_16___d274;
  tUInt32 DEF_sendF_filter_BITS_47_TO_32___d275;
  tUInt32 DEF_sendF_filter_BITS_63_TO_48___d276;
  tUInt32 DEF_sendF_filter_BITS_79_TO_64___d277;
  tUInt32 DEF_sendF_filter_BITS_95_TO_80___d278;
  tUInt32 DEF_sendF_filter_BITS_111_TO_96___d279;
  tUInt32 DEF_sendF_filter_BITS_127_TO_112___d280;
  tUInt32 DEF_sendF_filter_BITS_143_TO_128___d281;
  PORT_sendF_filter = ARG_sendF_filter;
  DEF_sendF_filter_BITS_143_TO_128___d281 = ARG_sendF_filter.get_bits_in_word32(4u, 0u, 16u);
  DEF_sendF_filter_BITS_127_TO_112___d280 = ARG_sendF_filter.get_bits_in_word32(3u, 16u, 16u);
  DEF_sendF_filter_BITS_111_TO_96___d279 = ARG_sendF_filter.get_bits_in_word32(3u, 0u, 16u);
  DEF_sendF_filter_BITS_95_TO_80___d278 = ARG_sendF_filter.get_bits_in_word32(2u, 16u, 16u);
  DEF_sendF_filter_BITS_79_TO_64___d277 = ARG_sendF_filter.get_bits_in_word32(2u, 0u, 16u);
  DEF_sendF_filter_BITS_63_TO_48___d276 = ARG_sendF_filter.get_bits_in_word32(1u, 16u, 16u);
  DEF_sendF_filter_BITS_47_TO_32___d275 = ARG_sendF_filter.get_bits_in_word32(1u, 0u, 16u);
  DEF_sendF_filter_BITS_31_TO_16___d274 = ARG_sendF_filter.get_bits_in_word32(0u, 16u, 16u);
  DEF_sendF_filter_BITS_15_TO_0___d273 = ARG_sendF_filter.get_bits_in_word32(0u, 0u, 16u);
  INST_coeffs_0.METH_write(DEF_sendF_filter_BITS_15_TO_0___d273);
  INST_coeffs_1.METH_write(DEF_sendF_filter_BITS_31_TO_16___d274);
  INST_coeffs_2.METH_write(DEF_sendF_filter_BITS_47_TO_32___d275);
  INST_coeffs_3.METH_write(DEF_sendF_filter_BITS_63_TO_48___d276);
  INST_coeffs_4.METH_write(DEF_sendF_filter_BITS_79_TO_64___d277);
  INST_coeffs_5.METH_write(DEF_sendF_filter_BITS_95_TO_80___d278);
  INST_coeffs_6.METH_write(DEF_sendF_filter_BITS_111_TO_96___d279);
  INST_coeffs_7.METH_write(DEF_sendF_filter_BITS_127_TO_112___d280);
  INST_coeffs_8.METH_write(DEF_sendF_filter_BITS_143_TO_128___d281);
}

tUInt8 MOD_mkConv3::METH_RDY_sendF()
{
  tUInt8 PORT_RDY_sendF;
  tUInt8 DEF_CAN_FIRE_sendF;
  DEF_CAN_FIRE_sendF = (tUInt8)1u;
  PORT_RDY_sendF = DEF_CAN_FIRE_sendF;
  return PORT_RDY_sendF;
}

tUInt32 MOD_mkConv3::METH_result()
{
  tUInt32 DEF_result__avValue1;
  tUInt32 PORT_result;
  DEF_result__avValue1 = INST__unnamed__1.METH_first();
  PORT_result = DEF_result__avValue1;
  INST__unnamed__1.METH_deq();
  return PORT_result;
}

tUInt8 MOD_mkConv3::METH_RDY_result()
{
  tUInt8 PORT_RDY_result;
  tUInt8 DEF_CAN_FIRE_result;
  DEF_CAN_FIRE_result = INST__unnamed__1.METH_i_notEmpty();
  PORT_RDY_result = DEF_CAN_FIRE_result;
  return PORT_RDY_result;
}

void MOD_mkConv3::METH_clean()
{
  INST_cl.METH_wset((tUInt8)1u);
}

tUInt8 MOD_mkConv3::METH_RDY_clean()
{
  tUInt8 DEF_CAN_FIRE_clean;
  tUInt8 PORT_RDY_clean;
  DEF_CAN_FIRE_clean = (tUInt8)1u;
  PORT_RDY_clean = DEF_CAN_FIRE_clean;
  return PORT_RDY_clean;
}


/* Reset routines */

void MOD_mkConv3::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_w.reset_RST(ARG_rst_in);
  INST_p3.reset_RST(ARG_rst_in);
  INST_p0.reset_RST(ARG_rst_in);
  INST_coeffs_8.reset_RST(ARG_rst_in);
  INST_coeffs_7.reset_RST(ARG_rst_in);
  INST_coeffs_6.reset_RST(ARG_rst_in);
  INST_coeffs_5.reset_RST(ARG_rst_in);
  INST_coeffs_4.reset_RST(ARG_rst_in);
  INST_coeffs_3.reset_RST(ARG_rst_in);
  INST_coeffs_2.reset_RST(ARG_rst_in);
  INST_coeffs_1.reset_RST(ARG_rst_in);
  INST_coeffs_0.reset_RST(ARG_rst_in);
  INST_clk.reset_RST(ARG_rst_in);
  INST_c3.reset_RST(ARG_rst_in);
  INST_c0.reset_RST(ARG_rst_in);
  INST_accumulator3.reset_RST(ARG_rst_in);
  INST_accumulator2_2.reset_RST(ARG_rst_in);
  INST_accumulator2_1.reset_RST(ARG_rst_in);
  INST_accumulator2_0.reset_RST(ARG_rst_in);
  INST_accumulator1_8.reset_RST(ARG_rst_in);
  INST_accumulator1_7.reset_RST(ARG_rst_in);
  INST_accumulator1_6.reset_RST(ARG_rst_in);
  INST_accumulator1_5.reset_RST(ARG_rst_in);
  INST_accumulator1_4.reset_RST(ARG_rst_in);
  INST_accumulator1_3.reset_RST(ARG_rst_in);
  INST_accumulator1_2.reset_RST(ARG_rst_in);
  INST_accumulator1_1.reset_RST(ARG_rst_in);
  INST_accumulator1_0.reset_RST(ARG_rst_in);
  INST_acc6.reset_RST(ARG_rst_in);
  INST_acc5.reset_RST(ARG_rst_in);
  INST_acc4.reset_RST(ARG_rst_in);
  INST_a1.reset_RST_N(ARG_rst_in);
  INST_a0.reset_RST_N(ARG_rst_in);
  INST__unnamed__9.reset_RST_N(ARG_rst_in);
  INST__unnamed__8.reset_RST_N(ARG_rst_in);
  INST__unnamed__7.reset_RST_N(ARG_rst_in);
  INST__unnamed__6.reset_RST_N(ARG_rst_in);
  INST__unnamed__5.reset_RST_N(ARG_rst_in);
  INST__unnamed__4.reset_RST_N(ARG_rst_in);
  INST__unnamed__3.reset_RST_N(ARG_rst_in);
  INST__unnamed__2.reset_RST(ARG_rst_in);
  INST__unnamed__11.reset_RST_N(ARG_rst_in);
  INST__unnamed__10.reset_RST_N(ARG_rst_in);
  INST__unnamed__1.reset_RST(ARG_rst_in);
  INST__unnamed_.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkConv3::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkConv3::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST__unnamed_.dump_state(indent + 2u);
  INST__unnamed__1.dump_state(indent + 2u);
  INST__unnamed__10.dump_state(indent + 2u);
  INST__unnamed__11.dump_state(indent + 2u);
  INST__unnamed__2.dump_state(indent + 2u);
  INST__unnamed__3.dump_state(indent + 2u);
  INST__unnamed__4.dump_state(indent + 2u);
  INST__unnamed__5.dump_state(indent + 2u);
  INST__unnamed__6.dump_state(indent + 2u);
  INST__unnamed__7.dump_state(indent + 2u);
  INST__unnamed__8.dump_state(indent + 2u);
  INST__unnamed__9.dump_state(indent + 2u);
  INST_a0.dump_state(indent + 2u);
  INST_a1.dump_state(indent + 2u);
  INST_acc4.dump_state(indent + 2u);
  INST_acc5.dump_state(indent + 2u);
  INST_acc6.dump_state(indent + 2u);
  INST_accumulator1_0.dump_state(indent + 2u);
  INST_accumulator1_1.dump_state(indent + 2u);
  INST_accumulator1_2.dump_state(indent + 2u);
  INST_accumulator1_3.dump_state(indent + 2u);
  INST_accumulator1_4.dump_state(indent + 2u);
  INST_accumulator1_5.dump_state(indent + 2u);
  INST_accumulator1_6.dump_state(indent + 2u);
  INST_accumulator1_7.dump_state(indent + 2u);
  INST_accumulator1_8.dump_state(indent + 2u);
  INST_accumulator2_0.dump_state(indent + 2u);
  INST_accumulator2_1.dump_state(indent + 2u);
  INST_accumulator2_2.dump_state(indent + 2u);
  INST_accumulator3.dump_state(indent + 2u);
  INST_c0.dump_state(indent + 2u);
  INST_c3.dump_state(indent + 2u);
  INST_cl.dump_state(indent + 2u);
  INST_clk.dump_state(indent + 2u);
  INST_coeffs_0.dump_state(indent + 2u);
  INST_coeffs_1.dump_state(indent + 2u);
  INST_coeffs_2.dump_state(indent + 2u);
  INST_coeffs_3.dump_state(indent + 2u);
  INST_coeffs_4.dump_state(indent + 2u);
  INST_coeffs_5.dump_state(indent + 2u);
  INST_coeffs_6.dump_state(indent + 2u);
  INST_coeffs_7.dump_state(indent + 2u);
  INST_coeffs_8.dump_state(indent + 2u);
  INST_p0.dump_state(indent + 2u);
  INST_p3.dump_state(indent + 2u);
  INST_w.dump_state(indent + 2u);
  INST_wc_0.dump_state(indent + 2u);
  INST_wc_1.dump_state(indent + 2u);
  INST_wc_2.dump_state(indent + 2u);
  INST_wc_3.dump_state(indent + 2u);
  INST_wc_4.dump_state(indent + 2u);
  INST_wc_5.dump_state(indent + 2u);
  INST_wc_6.dump_state(indent + 2u);
  INST_wc_7.dump_state(indent + 2u);
  INST_wc_8.dump_state(indent + 2u);
  INST_window_0.dump_state(indent + 2u);
  INST_window_1.dump_state(indent + 2u);
  INST_window_2.dump_state(indent + 2u);
  INST_window_3.dump_state(indent + 2u);
  INST_window_4.dump_state(indent + 2u);
  INST_window_5.dump_state(indent + 2u);
  INST_window_6.dump_state(indent + 2u);
  INST_window_7.dump_state(indent + 2u);
  INST_window_8.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkConv3::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 58u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_unnamed__first____d4", 144u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h11658", 144u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "sendF_filter", 4096u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "sendP_datas", 4096u);
  num = INST__unnamed_.dump_VCD_defs(num);
  num = INST__unnamed__1.dump_VCD_defs(num);
  num = INST__unnamed__2.dump_VCD_defs(num);
  num = INST_acc4.dump_VCD_defs(num);
  num = INST_acc5.dump_VCD_defs(num);
  num = INST_acc6.dump_VCD_defs(num);
  num = INST_accumulator1_0.dump_VCD_defs(num);
  num = INST_accumulator1_1.dump_VCD_defs(num);
  num = INST_accumulator1_2.dump_VCD_defs(num);
  num = INST_accumulator1_3.dump_VCD_defs(num);
  num = INST_accumulator1_4.dump_VCD_defs(num);
  num = INST_accumulator1_5.dump_VCD_defs(num);
  num = INST_accumulator1_6.dump_VCD_defs(num);
  num = INST_accumulator1_7.dump_VCD_defs(num);
  num = INST_accumulator1_8.dump_VCD_defs(num);
  num = INST_accumulator2_0.dump_VCD_defs(num);
  num = INST_accumulator2_1.dump_VCD_defs(num);
  num = INST_accumulator2_2.dump_VCD_defs(num);
  num = INST_accumulator3.dump_VCD_defs(num);
  num = INST_c0.dump_VCD_defs(num);
  num = INST_c3.dump_VCD_defs(num);
  num = INST_cl.dump_VCD_defs(num);
  num = INST_clk.dump_VCD_defs(num);
  num = INST_coeffs_0.dump_VCD_defs(num);
  num = INST_coeffs_1.dump_VCD_defs(num);
  num = INST_coeffs_2.dump_VCD_defs(num);
  num = INST_coeffs_3.dump_VCD_defs(num);
  num = INST_coeffs_4.dump_VCD_defs(num);
  num = INST_coeffs_5.dump_VCD_defs(num);
  num = INST_coeffs_6.dump_VCD_defs(num);
  num = INST_coeffs_7.dump_VCD_defs(num);
  num = INST_coeffs_8.dump_VCD_defs(num);
  num = INST_p0.dump_VCD_defs(num);
  num = INST_p3.dump_VCD_defs(num);
  num = INST_w.dump_VCD_defs(num);
  num = INST_wc_0.dump_VCD_defs(num);
  num = INST_wc_1.dump_VCD_defs(num);
  num = INST_wc_2.dump_VCD_defs(num);
  num = INST_wc_3.dump_VCD_defs(num);
  num = INST_wc_4.dump_VCD_defs(num);
  num = INST_wc_5.dump_VCD_defs(num);
  num = INST_wc_6.dump_VCD_defs(num);
  num = INST_wc_7.dump_VCD_defs(num);
  num = INST_wc_8.dump_VCD_defs(num);
  num = INST_window_0.dump_VCD_defs(num);
  num = INST_window_1.dump_VCD_defs(num);
  num = INST_window_2.dump_VCD_defs(num);
  num = INST_window_3.dump_VCD_defs(num);
  num = INST_window_4.dump_VCD_defs(num);
  num = INST_window_5.dump_VCD_defs(num);
  num = INST_window_6.dump_VCD_defs(num);
  num = INST_window_7.dump_VCD_defs(num);
  num = INST_window_8.dump_VCD_defs(num);
  if (levels != 1u)
  {
    unsigned int l = levels == 0u ? 0u : levels - 1u;
    num = INST__unnamed__10.dump_VCD_defs(l);
    num = INST__unnamed__11.dump_VCD_defs(l);
    num = INST__unnamed__3.dump_VCD_defs(l);
    num = INST__unnamed__4.dump_VCD_defs(l);
    num = INST__unnamed__5.dump_VCD_defs(l);
    num = INST__unnamed__6.dump_VCD_defs(l);
    num = INST__unnamed__7.dump_VCD_defs(l);
    num = INST__unnamed__8.dump_VCD_defs(l);
    num = INST__unnamed__9.dump_VCD_defs(l);
    num = INST_a0.dump_VCD_defs(l);
    num = INST_a1.dump_VCD_defs(l);
  }
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkConv3::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkConv3 &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
  if (levels != 1u)
    vcd_submodules(dt, levels - 1u, backing);
}

void MOD_mkConv3::vcd_defs(tVCDDumpType dt, MOD_mkConv3 &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 144u);
    vcd_write_x(sim_hdl, num++, 144u);
    vcd_write_x(sim_hdl, num++, 4096u);
    vcd_write_x(sim_hdl, num++, 4096u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF__unnamed__first____d4) != DEF__unnamed__first____d4)
      {
	vcd_write_val(sim_hdl, num, DEF__unnamed__first____d4, 144u);
	backing.DEF__unnamed__first____d4 = DEF__unnamed__first____d4;
      }
      ++num;
      if ((backing.DEF_x__h11658) != DEF_x__h11658)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h11658, 144u);
	backing.DEF_x__h11658 = DEF_x__h11658;
      }
      ++num;
      if ((backing.PORT_sendF_filter) != PORT_sendF_filter)
      {
	vcd_write_val(sim_hdl, num, PORT_sendF_filter, 4096u);
	backing.PORT_sendF_filter = PORT_sendF_filter;
      }
      ++num;
      if ((backing.PORT_sendP_datas) != PORT_sendP_datas)
      {
	vcd_write_val(sim_hdl, num, PORT_sendP_datas, 4096u);
	backing.PORT_sendP_datas = PORT_sendP_datas;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF__unnamed__first____d4, 144u);
      backing.DEF__unnamed__first____d4 = DEF__unnamed__first____d4;
      vcd_write_val(sim_hdl, num++, DEF_x__h11658, 144u);
      backing.DEF_x__h11658 = DEF_x__h11658;
      vcd_write_val(sim_hdl, num++, PORT_sendF_filter, 4096u);
      backing.PORT_sendF_filter = PORT_sendF_filter;
      vcd_write_val(sim_hdl, num++, PORT_sendP_datas, 4096u);
      backing.PORT_sendP_datas = PORT_sendP_datas;
    }
}

void MOD_mkConv3::vcd_prims(tVCDDumpType dt, MOD_mkConv3 &backing)
{
  INST__unnamed_.dump_VCD(dt, backing.INST__unnamed_);
  INST__unnamed__1.dump_VCD(dt, backing.INST__unnamed__1);
  INST__unnamed__2.dump_VCD(dt, backing.INST__unnamed__2);
  INST_acc4.dump_VCD(dt, backing.INST_acc4);
  INST_acc5.dump_VCD(dt, backing.INST_acc5);
  INST_acc6.dump_VCD(dt, backing.INST_acc6);
  INST_accumulator1_0.dump_VCD(dt, backing.INST_accumulator1_0);
  INST_accumulator1_1.dump_VCD(dt, backing.INST_accumulator1_1);
  INST_accumulator1_2.dump_VCD(dt, backing.INST_accumulator1_2);
  INST_accumulator1_3.dump_VCD(dt, backing.INST_accumulator1_3);
  INST_accumulator1_4.dump_VCD(dt, backing.INST_accumulator1_4);
  INST_accumulator1_5.dump_VCD(dt, backing.INST_accumulator1_5);
  INST_accumulator1_6.dump_VCD(dt, backing.INST_accumulator1_6);
  INST_accumulator1_7.dump_VCD(dt, backing.INST_accumulator1_7);
  INST_accumulator1_8.dump_VCD(dt, backing.INST_accumulator1_8);
  INST_accumulator2_0.dump_VCD(dt, backing.INST_accumulator2_0);
  INST_accumulator2_1.dump_VCD(dt, backing.INST_accumulator2_1);
  INST_accumulator2_2.dump_VCD(dt, backing.INST_accumulator2_2);
  INST_accumulator3.dump_VCD(dt, backing.INST_accumulator3);
  INST_c0.dump_VCD(dt, backing.INST_c0);
  INST_c3.dump_VCD(dt, backing.INST_c3);
  INST_cl.dump_VCD(dt, backing.INST_cl);
  INST_clk.dump_VCD(dt, backing.INST_clk);
  INST_coeffs_0.dump_VCD(dt, backing.INST_coeffs_0);
  INST_coeffs_1.dump_VCD(dt, backing.INST_coeffs_1);
  INST_coeffs_2.dump_VCD(dt, backing.INST_coeffs_2);
  INST_coeffs_3.dump_VCD(dt, backing.INST_coeffs_3);
  INST_coeffs_4.dump_VCD(dt, backing.INST_coeffs_4);
  INST_coeffs_5.dump_VCD(dt, backing.INST_coeffs_5);
  INST_coeffs_6.dump_VCD(dt, backing.INST_coeffs_6);
  INST_coeffs_7.dump_VCD(dt, backing.INST_coeffs_7);
  INST_coeffs_8.dump_VCD(dt, backing.INST_coeffs_8);
  INST_p0.dump_VCD(dt, backing.INST_p0);
  INST_p3.dump_VCD(dt, backing.INST_p3);
  INST_w.dump_VCD(dt, backing.INST_w);
  INST_wc_0.dump_VCD(dt, backing.INST_wc_0);
  INST_wc_1.dump_VCD(dt, backing.INST_wc_1);
  INST_wc_2.dump_VCD(dt, backing.INST_wc_2);
  INST_wc_3.dump_VCD(dt, backing.INST_wc_3);
  INST_wc_4.dump_VCD(dt, backing.INST_wc_4);
  INST_wc_5.dump_VCD(dt, backing.INST_wc_5);
  INST_wc_6.dump_VCD(dt, backing.INST_wc_6);
  INST_wc_7.dump_VCD(dt, backing.INST_wc_7);
  INST_wc_8.dump_VCD(dt, backing.INST_wc_8);
  INST_window_0.dump_VCD(dt, backing.INST_window_0);
  INST_window_1.dump_VCD(dt, backing.INST_window_1);
  INST_window_2.dump_VCD(dt, backing.INST_window_2);
  INST_window_3.dump_VCD(dt, backing.INST_window_3);
  INST_window_4.dump_VCD(dt, backing.INST_window_4);
  INST_window_5.dump_VCD(dt, backing.INST_window_5);
  INST_window_6.dump_VCD(dt, backing.INST_window_6);
  INST_window_7.dump_VCD(dt, backing.INST_window_7);
  INST_window_8.dump_VCD(dt, backing.INST_window_8);
}

void MOD_mkConv3::vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkConv3 &backing)
{
  INST__unnamed__10.dump_VCD(dt, levels, backing.INST__unnamed__10);
  INST__unnamed__11.dump_VCD(dt, levels, backing.INST__unnamed__11);
  INST__unnamed__3.dump_VCD(dt, levels, backing.INST__unnamed__3);
  INST__unnamed__4.dump_VCD(dt, levels, backing.INST__unnamed__4);
  INST__unnamed__5.dump_VCD(dt, levels, backing.INST__unnamed__5);
  INST__unnamed__6.dump_VCD(dt, levels, backing.INST__unnamed__6);
  INST__unnamed__7.dump_VCD(dt, levels, backing.INST__unnamed__7);
  INST__unnamed__8.dump_VCD(dt, levels, backing.INST__unnamed__8);
  INST__unnamed__9.dump_VCD(dt, levels, backing.INST__unnamed__9);
  INST_a0.dump_VCD(dt, levels, backing.INST_a0);
  INST_a1.dump_VCD(dt, levels, backing.INST_a1);
}
